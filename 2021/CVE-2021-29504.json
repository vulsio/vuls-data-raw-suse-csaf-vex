{
	"document": {
		"aggregate_severity": {
			"namespace": "https://www.suse.com/support/security/rating/",
			"text": "important"
		},
		"category": "csaf_vex",
		"csaf_version": "2.0",
		"distribution": {
			"text": "Copyright 2023 SUSE LLC. All rights reserved.",
			"tlp": {
				"label": "WHITE",
				"url": "https://www.first.org/tlp/"
			}
		},
		"lang": "en",
		"notes": [
			{
				"category": "summary",
				"text": "SUSE CVE-2021-29504",
				"title": "Title"
			},
			{
				"category": "description",
				"text": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior.",
				"title": "Description of the CVE"
			},
			{
				"category": "legal_disclaimer",
				"text": "CSAF 2.0 data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
				"title": "Terms of use"
			}
		],
		"publisher": {
			"category": "vendor",
			"contact_details": "https://www.suse.com/support/security/contact/",
			"name": "SUSE Product Security Team",
			"namespace": "https://www.suse.com/"
		},
		"references": [
			{
				"category": "external",
				"summary": "CVE-2021-29504",
				"url": "https://www.suse.com/security/cve/CVE-2021-29504"
			},
			{
				"category": "external",
				"summary": "SUSE Security Ratings",
				"url": "https://www.suse.com/support/security/rating/"
			}
		],
		"title": "SUSE CVE CVE-2021-29504",
		"tracking": {
			"current_release_date": "2023-02-15T03:43:30Z",
			"generator": {
				"date": "2023-02-15T03:43:30Z",
				"engine": {
					"name": "cve-database.git:bin/generate-csaf-vex.pl",
					"version": "1"
				}
			},
			"id": "CVE-2021-29504",
			"initial_release_date": "2023-02-15T03:43:30Z",
			"revision_history": [
				{
					"date": "2023-02-15T03:43:30Z",
					"number": "2",
					"summary": "Current version"
				}
			],
			"status": "interim",
			"version": "2"
		}
	},
	"product_tree": {
		"branches": [
			{
				"branches": [
					{
						"branches": [
							{
								"category": "product_name",
								"name": "openSUSE Tumbleweed",
								"product": {
									"name": "openSUSE Tumbleweed",
									"product_id": "openSUSE Tumbleweed",
									"product_identification_helper": {
										"cpe": "cpe:/o:opensuse:tumbleweed"
									}
								}
							},
							{
								"category": "product_version",
								"name": "wp-cli-2.5.0-1.2",
								"product": {
									"name": "wp-cli-2.5.0-1.2",
									"product_id": "wp-cli-2.5.0-1.2"
								}
							}
						],
						"category": "product_family",
						"name": "SUSE Linux Enterprise"
					}
				],
				"category": "vendor",
				"name": "SUSE"
			}
		],
		"relationships": [
			{
				"category": "default_component_of",
				"full_product_name": {
					"name": "wp-cli-2.5.0-1.2 as component of openSUSE Tumbleweed",
					"product_id": "openSUSE Tumbleweed:wp-cli-2.5.0-1.2"
				},
				"product_reference": "wp-cli-2.5.0-1.2",
				"relates_to_product_reference": "openSUSE Tumbleweed"
			}
		]
	},
	"vulnerabilities": [
		{
			"cve": "CVE-2021-29504",
			"ids": [
				{
					"system_name": "SUSE CVE Page",
					"text": "https://www.suse.com/security/cve/CVE-2021-29504"
				}
			],
			"notes": [
				{
					"category": "general",
					"text": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior.",
					"title": "Vulnerability description"
				}
			],
			"product_status": {
				"fixed": [
					"openSUSE Tumbleweed:wp-cli-2.5.0-1.2"
				]
			},
			"references": [
				{
					"category": "external",
					"summary": "CVE-2021-29504",
					"url": "https://www.suse.com/security/cve/CVE-2021-29504"
				},
				{
					"category": "external",
					"summary": "SUSE Security Ratings",
					"url": "https://www.suse.com/support/security/rating/"
				}
			],
			"remediations": [
				{
					"category": "vendor_fix",
					"details": "To install this SUSE Security Update use the SUSE recommended installation methods like YaST online_update or \"zypper patch\".\n",
					"product_ids": [
						"openSUSE Tumbleweed:wp-cli-2.5.0-1.2"
					]
				}
			],
			"scores": [
				{
					"cvss_v3": {
						"baseScore": 7.4,
						"baseSeverity": "HIGH",
						"vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
						"version": "3.1"
					},
					"products": [
						"openSUSE Tumbleweed:wp-cli-2.5.0-1.2"
					]
				}
			],
			"threats": [
				{
					"category": "impact",
					"date": "2021-06-08T03:09:42Z",
					"details": "important"
				}
			],
			"title": "CVE-2021-29504"
		}
	]
}
