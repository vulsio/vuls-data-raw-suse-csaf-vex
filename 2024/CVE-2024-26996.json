{
	"document": {
		"aggregate_severity": {
			"namespace": "https://www.suse.com/support/security/rating/",
			"text": "important"
		},
		"category": "csaf_vex",
		"csaf_version": "2.0",
		"distribution": {
			"text": "Copyright 2024 SUSE LLC. All rights reserved.",
			"tlp": {
				"label": "WHITE",
				"url": "https://www.first.org/tlp/"
			}
		},
		"lang": "en",
		"notes": [
			{
				"category": "summary",
				"text": "SUSE CVE-2024-26996",
				"title": "Title"
			},
			{
				"category": "description",
				"text": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: f_ncm: Fix UAF ncm object at re-bind after usb ep transport error\n\nWhen ncm function is working and then stop usb0 interface for link down,\neth_stop() is called. At this piont, accidentally if usb transport error\nshould happen in usb_ep_enable(), 'in_ep' and/or 'out_ep' may not be enabled.\n\nAfter that, ncm_disable() is called to disable for ncm unbind\nbut gether_disconnect() is never called since 'in_ep' is not enabled.\n\nAs the result, ncm object is released in ncm unbind\nbut 'dev->port_usb' associated to 'ncm->port' is not NULL.\n\nAnd when ncm bind again to recover netdev, ncm object is reallocated\nbut usb0 interface is already associated to previous released ncm object.\n\nTherefore, once usb0 interface is up and eth_start_xmit() is called,\nreleased ncm object is dereferrenced and it might cause use-after-free memory.\n\n[function unlink via configfs]\n  usb0: eth_stop dev->port_usb=ffffff9b179c3200\n  --> error happens in usb_ep_enable().\n  NCM: ncm_disable: ncm=ffffff9b179c3200\n  --> no gether_disconnect() since ncm->port.in_ep->enabled is false.\n  NCM: ncm_unbind: ncm unbind ncm=ffffff9b179c3200\n  NCM: ncm_free: ncm free ncm=ffffff9b179c3200   <-- released ncm\n\n[function link via configfs]\n  NCM: ncm_alloc: ncm alloc ncm=ffffff9ac4f8a000\n  NCM: ncm_bind: ncm bind ncm=ffffff9ac4f8a000\n  NCM: ncm_set_alt: ncm=ffffff9ac4f8a000 alt=0\n  usb0: eth_open dev->port_usb=ffffff9b179c3200  <-- previous released ncm\n  usb0: eth_start dev->port_usb=ffffff9b179c3200 <--\n  eth_start_xmit()\n  --> dev->wrap()\n  Unable to handle kernel paging request at virtual address dead00000000014f\n\nThis patch addresses the issue by checking if 'ncm->netdev' is not NULL at\nncm_disable() to call gether_disconnect() to deassociate 'dev->port_usb'.\nIt's more reasonable to check 'ncm->netdev' to call gether_connect/disconnect\nrather than check 'ncm->port.in_ep->enabled' since it might not be enabled\nbut the gether connection might be established.",
				"title": "Description of the CVE"
			},
			{
				"category": "legal_disclaimer",
				"text": "CSAF 2.0 data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
				"title": "Terms of use"
			}
		],
		"publisher": {
			"category": "vendor",
			"contact_details": "https://www.suse.com/support/security/contact/",
			"name": "SUSE Product Security Team",
			"namespace": "https://www.suse.com/"
		},
		"references": [
			{
				"category": "external",
				"summary": "CVE-2024-26996",
				"url": "https://www.suse.com/security/cve/CVE-2024-26996"
			},
			{
				"category": "external",
				"summary": "SUSE Security Ratings",
				"url": "https://www.suse.com/support/security/rating/"
			},
			{
				"category": "external",
				"summary": "SUSE Bug 1223752 for CVE-2024-26996",
				"url": "https://bugzilla.suse.com/1223752"
			}
		],
		"title": "SUSE CVE CVE-2024-26996",
		"tracking": {
			"current_release_date": "2024-05-03T02:09:41Z",
			"generator": {
				"date": "2024-05-03T02:09:41Z",
				"engine": {
					"name": "cve-database.git:bin/generate-csaf-vex.pl",
					"version": "1"
				}
			},
			"id": "CVE-2024-26996",
			"initial_release_date": "2024-05-03T02:09:41Z",
			"revision_history": [
				{
					"date": "2024-05-03T02:09:41Z",
					"number": "2",
					"summary": "Current version"
				}
			],
			"status": "interim",
			"version": "2"
		}
	},
	"product_tree": {}
}
